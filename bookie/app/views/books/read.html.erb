<script type='text/javascript' src="CollapsibleLists.js"></script>

<table class='my-table'>
    <tr>
        <td>
            <table class='my-table free-area'><tr>
                <td id="left-block" width="10%">
                    <% if not @first_page %>
                        <div class='hidden-button fixed' id='back-button'>
                            <%= link_to image_tag('back.png', :border => 0, :alt => 'Back', :width => 32, :height => 32), read_book_path(:user_id => @user_id, :book_id => @book_id, :back => true), id: "backbutton" %>
                        </div>
                    <% end %>
                    <div class='down'>
                        <div class='hidden-button'>
                            <%= image_tag('contents.png', :border => 0, :alt => 'Home', :width => 32, :height => 32, :onclick => "DrawContents()") %>
                        </div>
                        <div class='hidden-button'>
                            <%= link_to image_tag('home.png', :border => 0, :alt => 'Home', :width => 32, :height => 32), personal_index_path %>
                        </div>
                    </div>
                </td>
                <td width="90%"><div id='contents' class='scrollable'></div></td>
            </tr></table>
        </td>
        <td width="50%" valign="top"><center><span id="pagetext" class="pagetext"></span></center></td>
        <td width="25%" class='free-area' id='right-free-area'>
            <% if not @last_page %>
                <div class='hidden-button-right fixed' id='next-button'>
                    <%= link_to image_tag('next.png', :border => 0, :alt => 'Next', :width => 32, :height => 32), read_book_path(:user_id => @user_id, :book_id => @book_id), id: "nextbutton" %>
                </div>
            <% end %>
        </td>
    <tr>
</table>

<%= javascript_tag do %>

    function divclass(tag, pos) {
        var book_section_depth = parseInt('<%=j @depth %>');
        if (tag.indexOf('epigraph') >= 0) {
            return 'epigraph';
        }
        tag_words = tag.split("/");
        sections_count = 0;
        for (var j = 0; j < tag_words.length; j++) {
            if (tag_words[j] == 'section') {
                sections_count++;
            }
        }
        if (tag.indexOf('title') > 0) {
            return 'section' + (book_section_depth - sections_count);
        }
        if (pos == 0) {
            return 'pagetext start';
        } else {
            return 'pagetext';
        }
    }

    function fontHeight(div_class) {
        if (div_class == "section0") {
            return 20;
        } else if (div_class == "section1") {
            return 24;
        } else if (div_class == "section2") {
            return 30;
        } else if (div_class == "section3") {
            return 40;
        }
        return 16;
    }

    function GetJsonPage(user_id, book_id, page_number) {
        xmlHttp = new XMLHttpRequest();
        xmlHttp.open("GET", "http://localhost:3000/read_json?user_id=" + user_id + "&book_id=" + book_id + "&page_number=" + page_number, false);
        xmlHttp.send(null);
        return xmlHttp.responseText;
    }

    function GetJsonContents(user_id, book_id) {
        xmlHttp = new XMLHttpRequest();
        xmlHttp.open("GET", "http://localhost:3000/read_json_contents?user_id=" + user_id + "&book_id=" + book_id, false);
        xmlHttp.send(null);
        return xmlHttp.responseText;
    }

    function TryParagraph(text, tag, num, free, pos) {
        if (divclass(tag, pos).indexOf("section") == 0 && cur_div_class.indexOf("pagetext") == 0) {
            return [0, false, pos];
        }
        var parent = document.getElementById('pagetext');
        var div_elem = document.createElement("DIV");
        div_elem.className = divclass(tag, pos);
        div_elem.id = "p" + num;
        parent.appendChild(div_elem);
        cur_div_class = div_elem.className;

        div_elem.ondblclick = function() {
            if (div_elem.contentEditable == "inherit" || div_elem.contentEditable == "false") {
                var button = document.createElement("BUTTON");
                button.innerHTML = "save";
                button.id = div_elem.id + "button";
                button.style.position = "absolute";
                button.style.bottom = (free - div_elem.offsetHeight / 2 + 20) + "px";
                button.onclick = function(){ SaveParagraph(div_elem) }

                var area_par = document.getElementById('right-free-area');
                area_par.appendChild(button);

                clearSelection();
                div_elem.contentEditable = true;
                editing += 1;
                div_elem.focus();
            }
        }

        var words = text.trim().split(/[ ]+/);
        firstPos[num] = pos;
        for (var j = pos; j < words.length; j++) {
            div_elem.innerHTML += words[j] + " ";
            if (div_elem.offsetHeight > free) {
                div_elem.innerHTML = "";
                for (var k = pos; k < j; k++) {
                    div_elem.innerHTML += words[k] + " ";
                }
                lastPos[num] = j - 1;
                div_elem.className += " last";
                return [div_elem.offsetHeight, false, j];
            }
        }

        lastPos[num] = words.length - 1;
        return [div_elem.offsetHeight, true, 0];
    }

    function TryParagraphBack(text, tag, num, free, pos, boost) {
        if (divclass(tag, pos).indexOf("pagetext") == 0 && cur_div_class.indexOf("section") == 0) {
            return [0, false, pos, "pagebreak"];
        }

        var div_elem = null;
        if (boost == 'bottom') {
            div_elem = document.getElementById("p" + num);
            var curHeight = div_elem.offsetHeight;
            var k = lastPos[num] + 1;
            var words = text.trim().split(/[ ]+/);
            while (k < words.length && div_elem.offsetHeight == curHeight) {
                var oldText = div_elem.innerHTML;
                div_elem.innerHTML = div_elem.innerHTML + " " + words[k];
                if (div_elem.offsetHeight > curHeight) {
                    div_elem.innerHTML = oldText;
                    lastPos[num] = k;
                    if (k == words.length - 1) {
                        return [div_elem.offsetHeight, 'next', 0];
                    } else {
                        return [div_elem.offsetHeight, 'cur', k];
                    }
                }
                k += 1;
            }
            lastPos[num] = words.length - 1;
            cur_div_class = divclass(tag, 0);
            div_elem.className = divclass(tag, 0);
            return [div_elem.offsetHeight, 'next', 0];
        } else if (boost == 'top') {
            div_elem = document.getElementById("p" + num);
            var curHeight = div_elem.offsetHeight;
            var k = firstPos[num] - 1;
            var words = text.trim().split(/[ ]+/);
            while (k >= 0 && div_elem.offsetHeight <= curHeight + free) {
                var oldText = div_elem.innerHTML;
                div_elem.innerHTML = words[k] + " " + div_elem.innerHTML;
                if (div_elem.offsetHeight > curHeight + free) {
                    div_elem.innerHTML = oldText;
                    firstPos[num] = k;
                    return [div_elem.offsetHeight, false, k];
                }
                k -= 1;
            }
            firstPos[num] = 0;
            return [div_elem.offsetHeight, false, 0];
        } else {
            var parent = document.getElementById('pagetext');
            div_elem = document.createElement("DIV");
            div_elem.id = "p" + num;
            parent.insertBefore(div_elem, parent.childNodes[0]);
        }
        var addClassString = "";

        div_elem.ondblclick = function() {
            if (div_elem.contentEditable == "inherit" || div_elem.contentEditable == "false") {
                var button = document.createElement("BUTTON");
                button.innerHTML = "save";
                button.id = div_elem.id + "button";
                button.style.position = "absolute";
                button.style.top = (free - div_elem.offsetHeight / 2 - 10) + "px";
                button.onclick = function(){ SaveParagraph(div_elem) }

                var area_par = document.getElementById('right-free-area');
                area_par.appendChild(button);

                clearSelection();
                div_elem.contentEditable = true;
                editing += 1;
                div_elem.focus();
            }
        }

        var words = text.trim().split(/[ ]+/);
        var start_pos = pos;
        if (pos == -1) {
            start_pos = words.length - 1;
        } else {
            if (start_pos < words.length - 1) {
                addClassString = " last";
            }
        }
        lastPos[num] = start_pos;
        for (var j = start_pos; j >= 0; j--) {
            div_elem.innerHTML = words[j] + " " + div_elem.innerHTML;
            if (div_elem.offsetHeight > free) {
                div_elem.innerHTML = "";
                for (var k = start_pos; k > j; k--) {
                    div_elem.innerHTML = words[k] + " " + div_elem.innerHTML;
                }
                firstPos[num] = j + 1;
                cur_div_class = divclass(tag, j + 1);
                div_elem.className = divclass(tag, j + 1) + addClassString;
                return [div_elem.offsetHeight, false, j + 1];
            }
        }
        firstPos[num] = 0;
        cur_div_class = divclass(tag, 0);
        div_elem.className = divclass(tag, 0) + addClassString;
        return [div_elem.offsetHeight, true, -1];
    }

    function PostBookmarkAddr(user_id, book_id, page, par, pos) {
        var addr = "http://localhost:3000/save_bookmark?";
        addr += "user_id=" + user_id;
        addr += "&book_id=" + book_id;
        addr += "&page=" + page;
        addr += "&par=" + par;
        addr += "&pos=" + pos;
        return addr;
    }

    function SaveBookmark(b) {
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.open("GET", PostBookmarkAddr(b[0], b[1], b[2], b[3], b[4]), false);
        xmlHttp.send(null);
    }

    function PostParagraphParams(user_id, book_id, page, par, text, first, last) {
        var addr = "user_id=" + user_id;
        addr += "&book_id=" + book_id;
        addr += "&page=" + page;
        addr += "&par=" + par;
        addr += "&text=" + encodeURIComponent(text);
        addr += "&first=" + first;
        addr += "&last=" + last;
        return addr;
    }

    function SaveParagraph(d) {
        var b = document.getElementById(d.id + "button");
        b.parentNode.removeChild(b);
        d.contentEditable = false;
        editing -= 1;
        var par_number = d.id.substr(1, d.id.length - 1);

        var xmlHttp = new XMLHttpRequest();
        xmlHttp.open("POST", "http://localhost:3000/save_paragraph", true);
        xmlHttp.setRequestHeader('X-CSRF-Token', '<%=j form_authenticity_token %>');

        var u = '<%=j @user_id %>';
        var b = '<%=j @book_id %>';
        var p = '<%=j @page_number %>';
        var params = PostParagraphParams(u, b, p, par_number, d.innerHTML, firstPos[par_number], lastPos[par_number]);
        xmlHttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        xmlHttp.setRequestHeader("Content-length", params.length);
        xmlHttp.setRequestHeader("Connection", "close");

        xmlHttp.send(params);
    }

    function Verstka(bookmark) {
        if (typeof bookmark === 'undefined') {
            var user_id = parseInt('<%=j @user_id %>');
            var book_id = parseInt('<%=j @book_id %>');
            var page_number = parseInt(<%=j @page_number %>);
            var start_par = parseInt(<%=j @par %>);
            var start_pos = parseInt(<%=j @pos %>);
        } else {
            var user_id = bookmark[0];
            var book_id = bookmark[1];
            var page_number = bookmark[2];
            var start_par = bookmark[3];
            var start_pos = bookmark[4];
        }

        var height = $(window).height();
        var height_free_pixels = height - 40;

        document.getElementById('pagetext').innerHTML = "";

        while (true) {
            var json_text = GetJsonPage(user_id, book_id, page_number);
            var page = JSON.parse(json_text);
            var paragraphs = page.text.split("\n");
            var tags = page.tags.split("\n");

            for (var cur_par = start_par; cur_par < paragraphs.length; cur_par++) {
                ans = TryParagraph(paragraphs[cur_par], tags[cur_par], cur_par, height_free_pixels, start_pos);
                start_pos = ans[2];
                height_free_pixels -= ans[0];
                if (!ans[1]) {
                    return [user_id, book_id, page_number, cur_par, start_pos];
                }
            }
            start_par = 0;
            page_number++;
        }
    }

    function VerstkaBack() {
        var user_id = parseInt('<%=j @user_id %>');
        var book_id = parseInt('<%=j @book_id %>');
        var page_number = parseInt(<%=j @page_number %>);
        var start_par = parseInt(<%=j @par %>);
        var start_pos = parseInt(<%=j @pos %>) - 1;

        if (start_pos == -1) {
            start_par--;
        }
        if (start_par == -1) {
            if (page_number > 0) {
                page_number--;
            } else {
                return [user_id, book_id, 0, 0, 0];
            }
        }

        var height = $(window).height();
        var height_free_pixels = height - 40;

        document.getElementById('pagetext').innerHTML = "";

        while (true) {
            var json_text = GetJsonPage(user_id, book_id, page_number);
            var page = JSON.parse(json_text);
            var paragraphs = page.text.split("\n");
            var tags = page.tags.split("\n");

            if (start_par == -1) {
                start_par = paragraphs.length - 1;
            }

            for (var cur_par = start_par; cur_par >= 0; cur_par--) {
                var ans = TryParagraphBack(paragraphs[cur_par], tags[cur_par], cur_par, height_free_pixels, start_pos);
                if (ans[3] == "pagebreak") {
                    return [user_id, book_id, page_number, cur_par + 1, 0, true];
                }
                start_pos = ans[2];
                height_free_pixels -= ans[0];

                if (!ans[1]) {
                    ans = TryParagraphBack(paragraphs[start_par], tags[start_par], start_par, height_free_pixels, start_pos, 'bottom');
                    if (ans[1] == 'cur') {
                        SaveBookmark([user_id, book_id, page_number, start_par, ans[2]]);
                    } else {
                        if (start_par < paragraphs.length - 1) {
                            SaveBookmark([user_id, book_id, page_number, start_par + 1, 0]);
                        } else {
                            SaveBookmark([user_id, book_id, page_number + 1, 0, 0]);
                        }
                    }

                    var prnt = document.getElementById('pagetext');
                    var sum = 0;
                    var children = prnt.childNodes;
                    for (var i = 0; i < children.length; i++) {
                        sum += children[i].offsetHeight;
                    }
                    var firstRet = start_pos;
                    if (height - 40 - sum > fontHeight(tags[cur_par])) {
                        ans = TryParagraphBack(paragraphs[cur_par], tags[cur_par], cur_par, height - 40 - sum, start_pos, 'top');
                        firstRet = ans[2];
                    }

                    return [user_id, book_id, page_number, cur_par, firstRet];
                }
            }
            start_par = -1;
            if (page_number == 0) {
                return [user_id, book_id, 0, 0, 0];
            }
            page_number--;
        }
    }

    function DrawContents() {
        var c = document.getElementById('contents');
        var user_id = parseInt('<%=j @user_id %>');
        var book_id = parseInt('<%=j @book_id %>');
        if (contents_visible) {
            c.innerHTML = "";
        } else {
            var depth = parseInt('<%=j @depth %>');
            var ul_stack = new Array(depth + 1);
            var ul_root = document.createElement("UL");
            ul_root.className = "collapsibleList";
            ul_root.id = "contents-list";
            ul_stack[0] = ul_root;

            var a = JSON.parse(GetJsonContents(user_id, book_id));
            for (var i = 0; i < a.length; i++) {
                if (a[i][3] == 0) {
                    var li = document.createElement("LI");
                    li.innerHTML = a[i][2];
                    li.id = a[i][0] + " " + a[i][1];
                    li.className = "contents-element";
                    ul_stack[ul_stack.length - 1].appendChild(li);
                    li.addEventListener('click', function(e) {
                        if (e.target.tagName === 'LI') {
                            var pp = e.target.id.split(" ");
                            SaveBookmark([user_id, book_id, parseInt(pp[0]), parseInt(pp[1]), 0]);
                        }
                    });
                } else {
                    new_index = ul_stack.length - a[i][3];
                    var li = document.createElement("LI");
                    li.innerHTML = a[i][2];
                    var ul = document.createElement("UL");
                    ul_stack[new_index] = ul;
                    li.appendChild(ul);
                    ul_stack[new_index - 1].appendChild(li);
                }
            }
            c.appendChild(ul_root);
            CollapsibleLists.applyTo(document.getElementById('contents-list'));
        }
        contents_visible = !contents_visible;
    }

    function main() {
        editing = 0;
        firstPos = new Array(1000);
        lastPos = new Array(1000);
        cur_div_class = "none";
        contents_visible = false;
        document.getElementById("left-block").style.height = ($(window).height() - 40) + "px";
        document.getElementById("contents").style.height = ($(window).height() - 40) + "px";
        document.getElementById("back-button").style.top = ($(window).height() - 40) / 2 + "px";
        document.getElementById("next-button").style.top = ($(window).height() - 40) / 2 + "px";
        document.getElementById("next-button").style.right = "10px";

        var bookmark = [];
        if (parseInt('<%=j @back %>') > 0) {
            bookmark = VerstkaBack();
            if ((bookmark[2] == 0 && bookmark[3] == 0 && bookmark[4] == 0) || (bookmark[5] == true)) {
                bookmark = bookmark.slice(0, 5);
                SaveBookmark(bookmark);
                bookmark = Verstka(bookmark);
                document.getElementById('nextbutton').addEventListener("click", function() {SaveBookmark(bookmark); });
            } else {
                document.getElementById('backbutton').addEventListener("click", function() {SaveBookmark(bookmark); });
                document.getElementById('Home').addEventListener("click", function() {SaveBookmark(bookmark); });
            }
        } else {
            bookmark = Verstka();
            document.getElementById('nextbutton').addEventListener("click", function() {SaveBookmark(bookmark); });
            document.getElementById('Home').addEventListener("click", function() {SaveBookmark(bookmark); });
        }
    }

    main();

<% end %>

<script type="text/javascript"> 
    function clearSelection() {
        if (document.selection && document.selection.empty) {
            document.selection.empty();
        } else if (window.getSelection) {
            var sel = window.getSelection();
            sel.removeAllRanges();
        }
    }

    $(document).unbind().keydown(function(e) {
        if (e.keyCode == 37 && editing == 0) {
            document.getElementById('backbutton').click()
        }
        if (e.keyCode == 39 && editing == 0) {
            document.getElementById('nextbutton').click()
        }
        if (e.keyCode == 69 && editing == 0) {
            window.location.replace('<%= edit_page_get_path(:user_id => @user_id, :book_id => @book_id, :page_number => @page_number)%>');
        }
    });
</script>
